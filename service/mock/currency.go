// Code generated by MockGen. DO NOT EDIT.
// Source: service/currency.go

// Package mocksvc is a generated GoMock package.
package mocksvc

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	dto "github.com/pranayhere/simple-wallet/dto"
)

// MockCurrencySvc is a mock of CurrencySvc interface.
type MockCurrencySvc struct {
	ctrl     *gomock.Controller
	recorder *MockCurrencySvcMockRecorder
}

// MockCurrencySvcMockRecorder is the mock recorder for MockCurrencySvc.
type MockCurrencySvcMockRecorder struct {
	mock *MockCurrencySvc
}

// NewMockCurrencySvc creates a new mock instance.
func NewMockCurrencySvc(ctrl *gomock.Controller) *MockCurrencySvc {
	mock := &MockCurrencySvc{ctrl: ctrl}
	mock.recorder = &MockCurrencySvcMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCurrencySvc) EXPECT() *MockCurrencySvcMockRecorder {
	return m.recorder
}

// CreateCurrency mocks base method.
func (m *MockCurrencySvc) CreateCurrency(ctx context.Context, currencyDto dto.CurrencyDto) (dto.CurrencyDto, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCurrency", ctx, currencyDto)
	ret0, _ := ret[0].(dto.CurrencyDto)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCurrency indicates an expected call of CreateCurrency.
func (mr *MockCurrencySvcMockRecorder) CreateCurrency(ctx, currencyDto interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCurrency", reflect.TypeOf((*MockCurrencySvc)(nil).CreateCurrency), ctx, currencyDto)
}

// GetCurrency mocks base method.
func (m *MockCurrencySvc) GetCurrency(ctx context.Context, currencyCode string) (dto.CurrencyDto, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrency", ctx, currencyCode)
	ret0, _ := ret[0].(dto.CurrencyDto)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCurrency indicates an expected call of GetCurrency.
func (mr *MockCurrencySvcMockRecorder) GetCurrency(ctx, currencyCode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrency", reflect.TypeOf((*MockCurrencySvc)(nil).GetCurrency), ctx, currencyCode)
}
