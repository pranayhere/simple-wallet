// Code generated by MockGen. DO NOT EDIT.
// Source: store/currency.go

// Package mockdb is a generated GoMock package.
package mockdb

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/pranayhere/simple-wallet/domain"
	store "github.com/pranayhere/simple-wallet/store"
)

// MockCurrencyRepo is a mock of CurrencyRepo interface.
type MockCurrencyRepo struct {
	ctrl     *gomock.Controller
	recorder *MockCurrencyRepoMockRecorder
}

// MockCurrencyRepoMockRecorder is the mock recorder for MockCurrencyRepo.
type MockCurrencyRepoMockRecorder struct {
	mock *MockCurrencyRepo
}

// NewMockCurrencyRepo creates a new mock instance.
func NewMockCurrencyRepo(ctrl *gomock.Controller) *MockCurrencyRepo {
	mock := &MockCurrencyRepo{ctrl: ctrl}
	mock.recorder = &MockCurrencyRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCurrencyRepo) EXPECT() *MockCurrencyRepoMockRecorder {
	return m.recorder
}

// CreateCurrency mocks base method.
func (m *MockCurrencyRepo) CreateCurrency(ctx context.Context, arg store.CreateCurrencyParams) (domain.Currency, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCurrency", ctx, arg)
	ret0, _ := ret[0].(domain.Currency)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCurrency indicates an expected call of CreateCurrency.
func (mr *MockCurrencyRepoMockRecorder) CreateCurrency(ctx, arg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCurrency", reflect.TypeOf((*MockCurrencyRepo)(nil).CreateCurrency), ctx, arg)
}

// GetCurrency mocks base method.
func (m *MockCurrencyRepo) GetCurrency(ctx context.Context, code string) (domain.Currency, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrency", ctx, code)
	ret0, _ := ret[0].(domain.Currency)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCurrency indicates an expected call of GetCurrency.
func (mr *MockCurrencyRepoMockRecorder) GetCurrency(ctx, code interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrency", reflect.TypeOf((*MockCurrencyRepo)(nil).GetCurrency), ctx, code)
}
