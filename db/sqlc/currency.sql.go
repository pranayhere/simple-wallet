// Code generated by sqlc. DO NOT EDIT.
// source: currency.sql

package db

import (
	"context"
)

const createCurrency = `-- name: CreateCurrency :one
INSERT INTO currencies (code,
                        fraction)
VALUES ($1, $2) returning code, fraction, created_at
`

type CreateCurrencyParams struct {
	Code     string `json:"code"`
	Fraction int64  `json:"fraction"`
}

func (q *Queries) CreateCurrency(ctx context.Context, arg CreateCurrencyParams) (Currency, error) {
	row := q.db.QueryRowContext(ctx, createCurrency, arg.Code, arg.Fraction)
	var i Currency
	err := row.Scan(&i.Code, &i.Fraction, &i.CreatedAt)
	return i, err
}

const getCurrency = `-- name: GetCurrency :one
SELECT code, fraction, created_at FROM currencies
where code = $1 LIMIT 1
`

func (q *Queries) GetCurrency(ctx context.Context, code string) (Currency, error) {
	row := q.db.QueryRowContext(ctx, getCurrency, code)
	var i Currency
	err := row.Scan(&i.Code, &i.Fraction, &i.CreatedAt)
	return i, err
}
