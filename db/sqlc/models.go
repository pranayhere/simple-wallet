// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"database/sql"
	"fmt"
	"time"
)

type BankAccountStatus string

const (
	BankAccountStatusINVERIFICATION     BankAccountStatus = "IN_VERIFICATION"
	BankAccountStatusVERIFIED           BankAccountStatus = "VERIFIED"
	BankAccountStatusVERIFICATIONFAILED BankAccountStatus = "VERIFICATION_FAILED"
)

func (e *BankAccountStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = BankAccountStatus(s)
	case string:
		*e = BankAccountStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for BankAccountStatus: %T", src)
	}
	return nil
}

type UserStatus string

const (
	UserStatusACTIVE  UserStatus = "ACTIVE"
	UserStatusBLOCKED UserStatus = "BLOCKED"
)

func (e *UserStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UserStatus(s)
	case string:
		*e = UserStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for UserStatus: %T", src)
	}
	return nil
}

type WalletStatus string

const (
	WalletStatusACTIVE   WalletStatus = "ACTIVE"
	WalletStatusINACTIVE WalletStatus = "INACTIVE"
	WalletStatusBLOCKED  WalletStatus = "BLOCKED"
)

func (e *WalletStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = WalletStatus(s)
	case string:
		*e = WalletStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for WalletStatus: %T", src)
	}
	return nil
}

type BankAccount struct {
	ID        int64             `json:"id"`
	AccountNo string            `json:"account_no"`
	Ifsc      string            `json:"ifsc"`
	BankName  string            `json:"bank_name"`
	Status    BankAccountStatus `json:"status"`
	Currency  string            `json:"currency"`
	CreatedAt time.Time         `json:"created_at"`
	UpdatedAt time.Time         `json:"updated_at"`
}

type Currency struct {
	Code      string    `json:"code"`
	Fraction  int64     `json:"fraction"`
	CreatedAt time.Time `json:"created_at"`
}

type Entry struct {
	ID        int64     `json:"id"`
	WalletID  int64     `json:"wallet_id"`
	Amount    int64     `json:"amount"`
	CreatedAt time.Time `json:"created_at"`
}

type Transfer struct {
	ID           int64        `json:"id"`
	FromWalletID int64        `json:"from_wallet_id"`
	ToWalletID   int64        `json:"to_wallet_id"`
	Amount       int64        `json:"amount"`
	CreatedAt    sql.NullTime `json:"created_at"`
}

type User struct {
	ID                int64      `json:"id"`
	Username          string     `json:"username"`
	HashedPassword    string     `json:"hashed_password"`
	Status            UserStatus `json:"status"`
	FullName          string     `json:"full_name"`
	Email             string     `json:"email"`
	PasswordChangedAt time.Time  `json:"password_changed_at"`
	CreatedAt         time.Time  `json:"created_at"`
	UpdatedAt         time.Time  `json:"updated_at"`
}

type Wallet struct {
	ID            int64         `json:"id"`
	Name          string        `json:"name"`
	Address       string        `json:"address"`
	Status        WalletStatus  `json:"status"`
	UserID        int64         `json:"user_id"`
	BankAccountID sql.NullInt64 `json:"bank_account_id"`
	Balance       int64         `json:"balance"`
	Currency      string        `json:"currency"`
	CreatedAt     time.Time     `json:"created_at"`
	UpdatedAt     time.Time     `json:"updated_at"`
}
