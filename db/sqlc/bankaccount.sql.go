// Code generated by sqlc. DO NOT EDIT.
// source: bankaccount.sql

package db

import (
	"context"
)

const createBankAccount = `-- name: CreateBankAccount :one
INSERT INTO bank_accounts (account_no,
                           ifsc,
                           bank_name,
                           currency,
                           status)
VALUES ($1, $2, $3, $4, $5) RETURNING id, account_no, ifsc, bank_name, currency, status, created_at
`

type CreateBankAccountParams struct {
	AccountNo string `json:"account_no"`
	Ifsc      string `json:"ifsc"`
	BankName  string `json:"bank_name"`
	Currency  int64  `json:"currency"`
	Status    string `json:"status"`
}

func (q *Queries) CreateBankAccount(ctx context.Context, arg CreateBankAccountParams) (BankAccount, error) {
	row := q.db.QueryRowContext(ctx, createBankAccount,
		arg.AccountNo,
		arg.Ifsc,
		arg.BankName,
		arg.Currency,
		arg.Status,
	)
	var i BankAccount
	err := row.Scan(
		&i.ID,
		&i.AccountNo,
		&i.Ifsc,
		&i.BankName,
		&i.Currency,
		&i.Status,
		&i.CreatedAt,
	)
	return i, err
}

const getBankAccount = `-- name: GetBankAccount :one
SELECT id, account_no, ifsc, bank_name, currency, status, created_at
from bank_accounts
where id = $1 LIMIT 1
`

func (q *Queries) GetBankAccount(ctx context.Context, id int64) (BankAccount, error) {
	row := q.db.QueryRowContext(ctx, getBankAccount, id)
	var i BankAccount
	err := row.Scan(
		&i.ID,
		&i.AccountNo,
		&i.Ifsc,
		&i.BankName,
		&i.Currency,
		&i.Status,
		&i.CreatedAt,
	)
	return i, err
}

const updateBankAccountStatus = `-- name: UpdateBankAccountStatus :one
UPDATE bank_accounts
set Status = $1
where id = $2
RETURNING id, account_no, ifsc, bank_name, currency, status, created_at
`

type UpdateBankAccountStatusParams struct {
	Status string `json:"status"`
	ID     int64  `json:"id"`
}

func (q *Queries) UpdateBankAccountStatus(ctx context.Context, arg UpdateBankAccountStatusParams) (BankAccount, error) {
	row := q.db.QueryRowContext(ctx, updateBankAccountStatus, arg.Status, arg.ID)
	var i BankAccount
	err := row.Scan(
		&i.ID,
		&i.AccountNo,
		&i.Ifsc,
		&i.BankName,
		&i.Currency,
		&i.Status,
		&i.CreatedAt,
	)
	return i, err
}
